#include<iostream>
using namespace std;
#define MAXSIZE 10

struct intList
{
    int a[MAXSIZE];
    int length;
};

void swap(intList *l, int i, int j)
{
    int temp;
    temp = l->a[i];
    l->a[i] = l->a[j];
    l->a[j] = temp;
}

void printList(intList *l)
{
    for(int i = 0; i < l->length; i++)
    {
        cout<<l->a[i]<<"\t";
    }
}

int partition(intList *l, int left,int right)
{
    int pivot = left, pivotKey = l->a[pivot];
    while(left < right)
    {
        while(left < right && l->a[right] >= pivotKey)
        {
            right--;
        }
        swap(l, left, right);
        while(left < right && l->a[left] <= pivotKey)
        {
            left++;
        }
        swap(l ,left, right);
    }
    return left;
}

void qsort(intList *l, int left, int right)
{
    int pivot, i = left, j = right;
    pivot = partition(l, left, right);
    cout<<"pivot"<<pivot<<endl;
    printList(l);
    if(left < right)
    {
        qsort(l, left, pivot-1);
        qsort(l, pivot+1, right);
    }
}

void quickSort(intList *l)
{
    qsort(l, 0, l->length-1);
}

int main()
{
    intList l = {{2,3,4,1,5,8,3,6,8,9}, 10};
    printList(&l);
    quickSort(&l);
    printList(&l);
    return 0;
}
